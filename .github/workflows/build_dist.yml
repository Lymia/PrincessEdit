name: Build distribution

on:
  push:
    branches: [ master ]
    tags: [ '*' ]

jobs:
  nativeBuilds:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            sourceName: princessedit_native.dll
            targetName: princessedit_native.windows.x86_64.dll
          - os: macos-latest
            target: x86_64-apple-darwin
            sourceName: libprincessedit_native.dylib
            targetName: libprincessedit_native.macos.x86_64.dylib
          - os: macos-latest
            target: aarch64-apple-darwin
            sourceName: libprincessedit_native.dylib
            targetName: libprincessedit_native.macos.aarch64.dylib
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            sourceName: libprincessedit_native.so
            targetName: libprincessedit_native.linux.x86_64.so
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            sourceName: libprincessedit_native.so
            targetName: libprincessedit_native.linux.aarch64.so
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: nightly
          targets: ${{ matrix.target }}
      - name: Install aarch64 linker
        run: sudo apt-get install gcc-aarch64-linux-gnu
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
      - name: Compile for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target }}
        working-directory: modules/native/src/native
      - run: mv ${{ matrix.sourceName }} ${{ matrix.targetName }}
        working-directory: modules/native/src/native/target/${{ matrix.target }}/release
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.targetName }}
          path: modules/native/src/native/target/${{ matrix.target }}/release/${{ matrix.targetName }}

  buildJvm:
    runs-on: ubuntu-latest
    env:
      PRINCESS_EDIT_DO_NOT_BUILD_NATIVE: true
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Fetch git tags.
        run: git fetch --prune --unshallow --tags

      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
      - name: Cache Ivy packages
        uses: actions/cache@v2
        with:
          key: princess-edit-build-jvm
          path: ~/.ivy2
      - name: Run sbt precompileClassPath
        run: sbt -v precompileClassPath
      - uses: actions/upload-artifact@v2
        with:
          name: jvm-class-data
          path: target/class-path-dump/**

  # Build for Linux
  distNativeImage:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            nativeBin: libprincessedit_native.linux.x86_64.so
    runs-on: ${{ matrix.os }}
    needs:
      - nativeBuilds
      - buildJvm
    env:
      NATIVE_IMAGE_INSTALLED: true
      PRINCESS_EDIT_DO_NOT_BUILD_NATIVE: true
      PRINCESS_EDIT_PREBUILT_CLASS_PATH: true
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Fetch git tags.
        run: git fetch --prune --unshallow --tags

      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 17
          graalvm-version: 22.0.0.2
          native-image: true

      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.nativeBin }}
          path: modules/native/target
      - uses: actions/download-artifact@v2
        with:
          name: jvm-class-data
          path: target/class-path-dump

      - name: Run sbt dist
        run: sbt -v dist
      - uses: actions/upload-artifact@v2
        with:
          name: linux-artifacts
          path: target/scala-2.13/dist/*

  distUniversal:
    runs-on: ubuntu-latest
    needs:
      - nativeBuilds
      - buildJvm
    env:
      PRINCESS_EDIT_DO_NOT_BUILD_NATIVE: true
      PRINCESS_EDIT_PREBUILT_CLASS_PATH: true
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Fetch git tags.
        run: git fetch --prune --unshallow --tags

      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - uses: actions/download-artifact@v2
        with:
          name: princessedit_native.windows.x86_64.dll
          path: modules/native/target
      - uses: actions/download-artifact@v2
        with:
          name: libprincessedit_native.macos.x86_64.dylib
          path: modules/native/target
      - uses: actions/download-artifact@v2
        with:
          name: libprincessedit_native.macos.aarch64.dylib
          path: modules/native/target
      - uses: actions/download-artifact@v2
        with:
          name: libprincessedit_native.linux.x86_64.so
          path: modules/native/target
      - uses: actions/download-artifact@v2
        with:
          name: libprincessedit_native.linux.aarch64.so
          path: modules/native/target
      - uses: actions/download-artifact@v2
        with:
          name: jvm-class-data
          path: target/class-path-dump

      - name: Run sbt dist
        run: sbt -v distUniversal

      - uses: actions/upload-artifact@v2
        with:
          name: universal-artifacts
          path: target/scala-2.13/dist/*